name: automatic_test_build_publish
on: repository_dispatch
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
      - name: Checkout repository with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Update tag
        run: sed -i -e 's/^version = .*/version = "${{ github.event.client_payload.version }}"/' Cargo.toml 
      - name: Pull rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Git Submodule Update
        run: |
          git pull --recurse-submodules
          git submodule update --init --recursive
          git submodule update --remote --recursive
      - name: Compile protofiles with rust
        run: cargo build
      - name: Commit files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "Update to version to ${{ github.event.client_payload.version }}" -a
          git tag -a v${{ github.event.client_payload.version }} -m "Published new version: ${{ github.event.client_payload.version }}, see API for detailed changelog. ${{ github.event.client_payload.message }}."
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true
          force: true
      - name: Cargo publish    
        run: cargo publish --token ${CRATES_TOKEN}
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
      - name: Try delete (old) release if exists
        run: gh release delete v${{ github.event.client_payload.version }}
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release
        run: gh release create v${{ github.event.client_payload.version }} --title "v${{ github.event.client_payload.version }}" --notes "${{ github.event.client_payload.message }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
